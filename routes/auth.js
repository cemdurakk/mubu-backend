const express = require("express");
const bcrypt = require("bcrypt");
const User = require("../models/User");
const { sendSms } = require("../services/smsService");

const router = express.Router();

function generateCode() {
  return Math.floor(100000 + Math.random() * 900000).toString(); // 6 haneli kod
}

// ğŸ“Œ Register endpoint
router.post("/register", async (req, res) => {
  try {
    const { phone, password } = req.body;

    let user = await User.findOne({ phone });

    if (user) {
      if (!user.verified) {
        return res.status(400).json({
          message: "Bu numara zaten kayÄ±tlÄ±, doÄŸrulama kodunu tekrar gÃ¶ndermek ister misiniz?",
          pending: true,
        });
      }
      return res.status(400).json({ message: "Bu numara zaten kayÄ±tlÄ±" });
    }

    const hashedPassword = await bcrypt.hash(password, 10);
    const code = generateCode();

    user = new User({
      phone,
      password: hashedPassword,
      verified: false,
      verificationCode: code,
      verificationExpires: Date.now() + 5 * 60 * 1000, // 5 dakika
    });

    await user.save();

    await sendSms(phone, `MUBU doÄŸrulama kodunuz: ${code}`);

    res.json({ message: "KayÄ±t baÅŸarÄ±lÄ±, doÄŸrulama kodu gÃ¶nderildi" });
  } catch (err) {
    console.error(err);
    res.status(500).json({ message: "Sunucu hatasÄ±" });
  }
});

// ğŸ“Œ DoÄŸrulama endpoint
router.post("/verify", async (req, res) => {
  try {
    const { phone, code } = req.body;
    const user = await User.findOne({ phone });

    if (!user) {
      return res.status(400).json({ message: "KullanÄ±cÄ± bulunamadÄ±" });
    }

    if (user.verified) {
      return res.status(400).json({ message: "KullanÄ±cÄ± zaten doÄŸrulanmÄ±ÅŸ" });
    }

    if (user.verificationCode !== code) {
      return res.status(400).json({ message: "Kod hatalÄ±" });
    }

    if (user.verificationExpires < Date.now()) {
      return res.status(400).json({ message: "Kodun sÃ¼resi dolmuÅŸ" });
    }

    user.verified = true;
    user.verificationCode = undefined;
    user.verificationExpires = undefined;
    await user.save();

    res.json({ message: "DoÄŸrulama baÅŸarÄ±lÄ±" });
  } catch (err) {
    console.error(err);
    res.status(500).json({ message: "Sunucu hatasÄ±" });
  }
});

// ğŸ“Œ Kod yeniden gÃ¶nderme endpoint
router.post("/resend-code", async (req, res) => {
  try {
    const { phone } = req.body;
    const user = await User.findOne({ phone });

    if (!user) {
      return res.status(400).json({ message: "KullanÄ±cÄ± bulunamadÄ±" });
    }

    if (user.verified) {
      return res.status(400).json({ message: "KullanÄ±cÄ± zaten doÄŸrulanmÄ±ÅŸ" });
    }

    const code = generateCode();
    user.verificationCode = code;
    user.verificationExpires = Date.now() + 5 * 60 * 1000;
    await user.save();

    await sendSms(phone, `MUBU yeni doÄŸrulama kodunuz: ${code}`);

    res.json({ message: "Yeni doÄŸrulama kodu gÃ¶nderildi" });
  } catch (err) {
    console.error(err);
    res.status(500).json({ message: "Sunucu hatasÄ±" });
  }
});

module.exports = router;
